(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{70:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"git-terminal-workshop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-terminal-workshop","aria-hidden":"true"}},[t._v("#")]),t._v(" git terminal workshop")]),a("p",[t._v("install git\nsourcetree gui (git)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config user.name <name>\ngit config user.email <email>\n")])]),a("h3",{attrs:{id:"init-start-a-new-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-start-a-new-project","aria-hidden":"true"}},[t._v("#")]),t._v(" init (start a new project)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git init\n")])]),a("h3",{attrs:{id:"clone-download-a-remote-repo-to-your-local-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone-download-a-remote-repo-to-your-local-machine","aria-hidden":"true"}},[t._v("#")]),t._v(" clone (download a remote repo to your local machine)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone https://github.com/energbox/eb-workshops\n")])]),a("h2",{attrs:{id:"show-stats-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-stats-logs","aria-hidden":"true"}},[t._v("#")]),t._v(" show stats/logs")]),a("h3",{attrs:{id:"status-show-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status-show-status","aria-hidden":"true"}},[t._v("#")]),t._v(" status (show status)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git status\n")])]),a("h3",{attrs:{id:"remote-anything-to-do-with-remote-info"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remote-anything-to-do-with-remote-info","aria-hidden":"true"}},[t._v("#")]),t._v(" remote (anything to do with remote info)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote -v\n")])]),a("p",[t._v("add")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add <name> \n")])]),a("p",[t._v("e.g.")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add https://github.com/energybox/eb-workshops\n")])]),a("p",[t._v("remove")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote remove <name>  (removes remote url on your local repo)\n")])]),a("h2",{attrs:{id:"add-work"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-work","aria-hidden":"true"}},[t._v("#")]),t._v(" add work")]),a("h3",{attrs:{id:"add-add-to-commit-but-not-committed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-add-to-commit-but-not-committed","aria-hidden":"true"}},[t._v("#")]),t._v(" add (add to commit, but not committed)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add .  (add all files)\n")])]),a("h3",{attrs:{id:"commit-commit-adds-to-commit-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit-commit-adds-to-commit-tree","aria-hidden":"true"}},[t._v("#")]),t._v(" commit (commit, adds to commit tree)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git commit -m "Init Commit"\n')])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git commit --amend (amend current commit, good when you want to want to change the commit message)\n")])]),a("h3",{attrs:{id:"reset-there-s-soft-hard-resets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-there-s-soft-hard-resets","aria-hidden":"true"}},[t._v("#")]),t._v(" reset (there's soft/hard resets)")]),a("p",[t._v("// when you do "),a("code",[t._v("git add")]),t._v(" but want to reset the files added")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset \n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('undo last commit\n$ git commit -m "Something terribly misguided"              (1)\n$ git reset HEAD~                                           (2)\n<< edit files as necessary >>                               (3)\n$ git add ...                                               (4)\n$ git commit -c ORIG_HEAD                                   (5)\n')])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("discards all history and changes back to commit\n$ git reset --hard <commit>\n")])]),a("h3",{attrs:{id:"push-pushes-commits-to-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-pushes-commits-to-remote","aria-hidden":"true"}},[t._v("#")]),t._v(" push (pushes commits to remote)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin master\n")])]),a("h3",{attrs:{id:"tag-when-you-want-to-add-a-tag-to-a-commit-good-for-releases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag-when-you-want-to-add-a-tag-to-a-commit-good-for-releases","aria-hidden":"true"}},[t._v("#")]),t._v(" tag (when you want to add a tag to a commit, good for releases)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git tag -a <version number> -m <version message/name>\n")])]),a("p",[t._v("e.g.")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git tag -a 0.1.0 -m "Version 0.1.0" (semver)\n')])]),a("h3",{attrs:{id:"log-show-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-show-logs","aria-hidden":"true"}},[t._v("#")]),t._v(" log (show logs)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log\n")])]),a("h3",{attrs:{id:"stash-dont-commit-but-save-for-later-useful-when-swtiching-branches"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stash-dont-commit-but-save-for-later-useful-when-swtiching-branches","aria-hidden":"true"}},[t._v("#")]),t._v(" stash (dont commit but save for later, useful when swtiching branches)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git stash\n\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git stash pop (pop out)\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git stash drop (dont want anymore)\n")])]),a("h3",{attrs:{id:"fetch-fetch-don-t-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-fetch-don-t-merge","aria-hidden":"true"}},[t._v("#")]),t._v(" fetch (fetch don't merge)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git fetch \n")])]),a("h2",{attrs:{id:"more-intermediate-techniques"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-intermediate-techniques","aria-hidden":"true"}},[t._v("#")]),t._v(" more intermediate techniques")]),a("h3",{attrs:{id:"pull-fetch-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-fetch-merge","aria-hidden":"true"}},[t._v("#")]),t._v(" pull (fetch + merge)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git pull origin master \n")])]),a("h3",{attrs:{id:"merge-merge-two-branches-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge-merge-two-branches-together","aria-hidden":"true"}},[t._v("#")]),t._v(" merge (merge two branches together)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git merge develop master\n")])]),a("h3",{attrs:{id:"rebase-put-local-changes-above-another-branch-could-be-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase-put-local-changes-above-another-branch-could-be-remote","aria-hidden":"true"}},[t._v("#")]),t._v(" rebase (put local changes above another branch, could be remote)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git merge origin/develop\n")])]),a("h3",{attrs:{id:"checkout-when-you-want-to-switch-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkout-when-you-want-to-switch-branch","aria-hidden":"true"}},[t._v("#")]),t._v(" checkout (when you want to switch branch)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout branch \n")])]),a("h3",{attrs:{id:"branch-when-you-want-to-create-or-delete-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#branch-when-you-want-to-create-or-delete-branch","aria-hidden":"true"}},[t._v("#")]),t._v(" branch (when you want to create or delete branch)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git branch <new branch name>\ngit branch -D <branch name> (delete branch)\n")])]),a("h3",{attrs:{id:"diff-show-differences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-show-differences","aria-hidden":"true"}},[t._v("#")]),t._v(" diff (show differences)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("shows file differences not yet staged\ngit diff\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("between two branches\ngit diff <branch> <branch2>\n")])]),a("h3",{attrs:{id:"cherrypick-select-one-commit-from-another-branch-and-add-to-current-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cherrypick-select-one-commit-from-another-branch-and-add-to-current-branch","aria-hidden":"true"}},[t._v("#")]),t._v(" cherrypick (select one commit from another branch and add to current branch)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git cherrypick <commitmessage> \n")])]),a("h2",{attrs:{id:"submodules-advanced-topic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodules-advanced-topic","aria-hidden":"true"}},[t._v("#")]),t._v(" submodules (advanced topic)")]),a("h2",{attrs:{id:"cheats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cheats","aria-hidden":"true"}},[t._v("#")]),t._v(" cheats")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[alias]\n\tl = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all\n\tamend = commit --amend\n\tsh = stash\n\tpop = stash pop\n\tdrop = stash drop\n\tst = status\n\tco = checkout\n\tc = config\n\tp = push origin develop\n\trb = rebase origin/develop\n\tf = fetch\n")])]),a("h2",{attrs:{id:"todos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todos","aria-hidden":"true"}},[t._v("#")]),t._v(" todos")]),a("ul",[a("li",[t._v("gifs "),a("code",[t._v("git.md")])]),a("li",[t._v("submodules")]),a("li",[t._v("other stuff I missed")])]),a("h2",{attrs:{id:"further-materials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#further-materials","aria-hidden":"true"}},[t._v("#")]),t._v(" further materials")]),a("ul",[a("li",[t._v("https://try.github.io/levels/1/challenges/1")]),a("li",[t._v("https://github.com/pcottle/learnGitBranching")]),a("li",[t._v("see "),a("code",[t._v("git-cheatsheet.pdf")]),t._v(" for cheatsheet")])]),a("h2",{attrs:{id:"author"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#author","aria-hidden":"true"}},[t._v("#")]),t._v(" author")]),a("p",[t._v("Denis Tsoi "),a("a",{attrs:{href:"mailto:denistsoi@gmail.com"}},[t._v("denistsoi@gmail.com")])])])}],!1,null,null,null);e.default=s.exports}}]);